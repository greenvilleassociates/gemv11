/*using Enterprise.Controllers;

var builder = WebApplication.CreateBuilder(args);


// Add services to the container
builder.Services.AddCors(options =>
{
options.AddPolicy("AllowAll",
    policy =>
    {
        policy.AllowAnyOrigin()
              .AllowAnyHeader()
              .AllowAnyMethod();
    });

});


builder.Services.AddControllers();
// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();
var app = builder.Build();
app.UseCors("AllowSpecificOrigins");
/*builder.WebHost.ConfigureKestrel(options =>
{
    options.Listen(System.Net.IPAddress.Any, 5033); // Listen on all IPs at port 5033
});*/

// Configure the HTTP request pipeline.
//if (app.Environment.IsDevelopment())
//{
    app.UseSwagger();
    app.UseSwaggerUI();
//}

app.UseHttpsRedirection();

app.UseAuthorization();
app.MapControllers();
app.MapGaccountEndpoints();
app.MapGappEndpoints();
app.MapGapptypeEndpoints();
app.MapGbranchEndpoints();
app.MapGbregionEndpoints();
app.MapGchangeEndpoints();
app.MapGchannelEndpoints();
app.MapGchanneltypeEndpoints();
app.MapGcircuittypeEndpoints();
app.MapGcompanyEndpoints();
app.MapGcomputerEndpoints();
app.MapGconduitEndpoints();
app.MapGcountryEndpoints();
app.MapGcpeotherEndpoints();
app.MapGcpetypeEndpoints();
app.MapGcustomerEndpoints();
app.MapGdataservicesEndpoints();
app.MapGdiskEndpoints();
app.MapGdisktypeEndpoints();
app.MapGdservicetypeEndpoints();
app.MapGemployeeEndpoints();
app.MapGengineregionEndpoints();
app.MapGfirewallEndpoints();
app.MapGgatewayEndpoints();
app.MapGgridEndpoints();
app.MapGgridnodeEndpoints();
app.MapGgridtopologyEndpoints();
app.MapGhdvideoEndpoints();
app.MapGhostEndpoints();
app.MapGhostimageEndpoints();
app.MapGhregionEndpoints();
app.MapGhostlparEndpoints();
app.MapGhostvmEndpoints();
app.MapGinventoryEndpoints();
app.MapGinventorytypeEndpoints();
app.MapGitsmEndpoints();
app.MapGmanagerEndpoints();
app.MapGnetworkEndpoints();
app.MapGnetworktypeEndpoints();
app.MapGopticalringEndpoints();
app.MapGopticalsegmentEndpoints();
app.MapGopttypeEndpoints();
app.MapGphoneEndpoints();
app.MapGphysicalparEndpoints();
app.MapGproductEndpoints();
app.MapGrouterEndpoints();
app.MapGsecvideoEndpoints();
app.MapGserverEndpoints();
app.MapGserviceorderEndpoints();
app.MapGserviceordertypeEndpoints();
app.MapGsiteEndpoints();
app.MapGsitetypeEndpoints();
app.MapGswitchEndpoints();
app.MapGtelephonenumberEndpoints();
app.MapGtrunktypeEndpoints();
app.MapGuserEndpoints();
app.MapGusergroupEndpoints();
app.MapGvendorEndpoints();
app.MapGvoicegatewayEndpoints();
app.MapGvoiceplatformEndpoints();
app.MapGvoiceplatformtypeEndpoints();
app.MapGvoiceserviceEndpoints();
app.MapGvoicetrunkEndpoints();
app.MapGvoicetrunktypeEndpoints();
app.MapGvolumeEndpoints();
app.MapGvpnEndpoints();
app.MapGvpntypeEndpoints();
app.MapGvservicetypeEndpoints();
app.MapGwholesalerEndpoints();
app.MapGworkorderEndpoints();
app.MapHUserEndpoints();
app.Run();
*/