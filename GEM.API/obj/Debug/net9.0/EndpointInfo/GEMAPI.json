{
  "openapi": "3.0.1",
  "info": {
    "title": "GEMAPI",
    "version": "1.0"
  },
  "paths": {
    "/Console/{option}": {
      "get": {
        "tags": [
          "Console"
        ],
        "parameters": [
          {
            "name": "option",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Gcircuittype": {
      "get": {
        "tags": [
          "Gcircuittype"
        ],
        "operationId": "GetAllGcircuittypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gcircuittype"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Gcircuittype"
        ],
        "operationId": "CreateGcircuittype",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gcircuittype"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/Gcircuittype/{id}": {
      "get": {
        "tags": [
          "Gcircuittype"
        ],
        "operationId": "GetGcircuittypeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gcircuittype"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gcircuittype"
        ],
        "operationId": "UpdateGcircuittype",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gcircuittype"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Gcircuittype"
        ],
        "operationId": "DeleteGcircuittype",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/Ghostvm": {
      "get": {
        "tags": [
          "Ghostvm"
        ],
        "operationId": "GetAllGhostvms",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ghostvm"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ghostvm"
        ],
        "operationId": "CreateGhostvm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ghostvm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/Ghostvm/{id}": {
      "get": {
        "tags": [
          "Ghostvm"
        ],
        "operationId": "GetGhostvmById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ghostvm"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ghostvm"
        ],
        "operationId": "UpdateGhostvm",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ghostvm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Ghostvm"
        ],
        "operationId": "DeleteGhostvm",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/Gvendor": {
      "get": {
        "tags": [
          "Gvendor"
        ],
        "operationId": "GetAllGvendors",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gvendor"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Gvendor"
        ],
        "operationId": "CreateGvendor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gvendor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/Gvendor/{id}": {
      "get": {
        "tags": [
          "Gvendor"
        ],
        "operationId": "GetGvendorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gvendor"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gvendor"
        ],
        "operationId": "UpdateGvendor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gvendor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Gvendor"
        ],
        "operationId": "DeleteGvendor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/HUser": {
      "get": {
        "tags": [
          "HUser"
        ],
        "operationId": "GetAllHUsers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HUser"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "HUser"
        ],
        "operationId": "CreateHUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/HUser/{id}": {
      "get": {
        "tags": [
          "HUser"
        ],
        "operationId": "GetHUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HUser"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "HUser"
        ],
        "operationId": "UpdateHUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "HUser"
        ],
        "operationId": "DeleteHUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Gcircuittype": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "circuittypeid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ghostvm": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "vmid": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "ipaddress": {
            "type": "string",
            "nullable": true
          },
          "telemetryipaddress": {
            "type": "string",
            "nullable": true
          },
          "vpnid1": {
            "type": "string",
            "nullable": true
          },
          "vpnid2": {
            "type": "string",
            "nullable": true
          },
          "inventoryid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Gvendor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "vendorid": {
            "type": "string",
            "nullable": true
          },
          "vendorname": {
            "type": "string",
            "nullable": true
          },
          "vendoraddress1": {
            "type": "string",
            "nullable": true
          },
          "vendoraddress2": {
            "type": "string",
            "nullable": true
          },
          "vendorcity": {
            "type": "string",
            "nullable": true
          },
          "vendorstate": {
            "type": "string",
            "nullable": true
          },
          "vendorzip": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "block": {
            "type": "integer",
            "format": "int32"
          },
          "sendEmail": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastvisitDate": {
            "type": "string",
            "format": "date-time"
          },
          "activation": {
            "type": "string",
            "nullable": true
          },
          "params": {
            "type": "string",
            "nullable": true
          },
          "lastResetTime": {
            "type": "string",
            "format": "date-time"
          },
          "resetCount": {
            "type": "integer",
            "format": "int64"
          },
          "otpKey": {
            "type": "string",
            "nullable": true
          },
          "otep": {
            "type": "string",
            "nullable": true
          },
          "requireReset": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Void": {
        "type": "object",
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}