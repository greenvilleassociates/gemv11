{
  "openapi": "3.0.1",
  "info": {
    "title": "GEMAPI",
    "version": "1.0"
  },
  "paths": {
    "/Console/{option}": {
      "get": {
        "tags": [
          "Console"
        ],
        "parameters": [
          {
            "name": "option",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Gaccount": {
      "get": {
        "tags": [
          "Gaccount"
        ],
        "operationId": "GetAllGaccounts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gaccount"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Gaccount"
        ],
        "operationId": "CreateGaccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gaccount"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/Gaccount/{id}": {
      "get": {
        "tags": [
          "Gaccount"
        ],
        "operationId": "GetGaccountById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gaccount"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gaccount"
        ],
        "operationId": "UpdateGaccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gaccount"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Gaccount"
        ],
        "operationId": "DeleteGaccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/Gapp": {
      "get": {
        "tags": [
          "Gapp"
        ],
        "operationId": "GetAllGapps",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gapp"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Gapp"
        ],
        "operationId": "CreateGapp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gapp"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/Gapp/{id}": {
      "get": {
        "tags": [
          "Gapp"
        ],
        "operationId": "GetGappById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gapp"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gapp"
        ],
        "operationId": "UpdateGapp",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gapp"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Gapp"
        ],
        "operationId": "DeleteGapp",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/Gchange": {
      "get": {
        "tags": [
          "Gchange"
        ],
        "operationId": "GetAllGchanges",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gchange"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Gchange"
        ],
        "operationId": "CreateGchange",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gchange"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/Gchange/{id}": {
      "get": {
        "tags": [
          "Gchange"
        ],
        "operationId": "GetGchangeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gchange"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gchange"
        ],
        "operationId": "UpdateGchange",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gchange"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Gchange"
        ],
        "operationId": "DeleteGchange",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/Gcircuittype": {
      "get": {
        "tags": [
          "Gcircuittype"
        ],
        "operationId": "GetAllGcircuittypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gcircuittype"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Gcircuittype"
        ],
        "operationId": "CreateGcircuittype",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gcircuittype"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/Gcircuittype/{id}": {
      "get": {
        "tags": [
          "Gcircuittype"
        ],
        "operationId": "GetGcircuittypeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gcircuittype"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gcircuittype"
        ],
        "operationId": "UpdateGcircuittype",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gcircuittype"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Gcircuittype"
        ],
        "operationId": "DeleteGcircuittype",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/Gcustomer": {
      "get": {
        "tags": [
          "Gcustomer"
        ],
        "operationId": "GetAllGcustomers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gcustomer"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Gcustomer"
        ],
        "operationId": "CreateGcustomer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gcustomer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/Gcustomer/{id}": {
      "get": {
        "tags": [
          "Gcustomer"
        ],
        "operationId": "GetGcustomerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gcustomer"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gcustomer"
        ],
        "operationId": "UpdateGcustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gcustomer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Gcustomer"
        ],
        "operationId": "DeleteGcustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/Ghost": {
      "get": {
        "tags": [
          "Ghost"
        ],
        "operationId": "GetAllGhosts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ghost"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ghost"
        ],
        "operationId": "CreateGhost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ghost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/Ghost/{id}": {
      "get": {
        "tags": [
          "Ghost"
        ],
        "operationId": "GetGhostById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ghost"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ghost"
        ],
        "operationId": "UpdateGhost",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ghost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Ghost"
        ],
        "operationId": "DeleteGhost",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/Ghostimage": {
      "get": {
        "tags": [
          "Ghostimage"
        ],
        "operationId": "GetAllGhostimages",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ghostimage"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ghostimage"
        ],
        "operationId": "CreateGhostimage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ghostimage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/Ghostimage/{id}": {
      "get": {
        "tags": [
          "Ghostimage"
        ],
        "operationId": "GetGhostimageById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ghostimage"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ghostimage"
        ],
        "operationId": "UpdateGhostimage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ghostimage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Ghostimage"
        ],
        "operationId": "DeleteGhostimage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/Ghostvm": {
      "get": {
        "tags": [
          "Ghostvm"
        ],
        "operationId": "GetAllGhostvms",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ghostvm"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ghostvm"
        ],
        "operationId": "CreateGhostvm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ghostvm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/Ghostvm/{id}": {
      "get": {
        "tags": [
          "Ghostvm"
        ],
        "operationId": "GetGhostvmById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ghostvm"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ghostvm"
        ],
        "operationId": "UpdateGhostvm",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ghostvm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Ghostvm"
        ],
        "operationId": "DeleteGhostvm",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/Gitsm": {
      "get": {
        "tags": [
          "Gitsm"
        ],
        "operationId": "GetAllGitsms",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gitsm"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Gitsm"
        ],
        "operationId": "CreateGitsm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gitsm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/Gitsm/{id}": {
      "get": {
        "tags": [
          "Gitsm"
        ],
        "operationId": "GetGitsmById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gitsm"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gitsm"
        ],
        "operationId": "UpdateGitsm",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gitsm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Gitsm"
        ],
        "operationId": "DeleteGitsm",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/Gmanager": {
      "get": {
        "tags": [
          "Gmanager"
        ],
        "operationId": "GetAllGmanagers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gmanager"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Gmanager"
        ],
        "operationId": "CreateGmanager",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gmanager"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/Gmanager/{id}": {
      "get": {
        "tags": [
          "Gmanager"
        ],
        "operationId": "GetGmanagerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gmanager"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gmanager"
        ],
        "operationId": "UpdateGmanager",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gmanager"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Gmanager"
        ],
        "operationId": "DeleteGmanager",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/Grouter": {
      "get": {
        "tags": [
          "Grouter"
        ],
        "operationId": "GetAllGrouters",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grouter"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Grouter"
        ],
        "operationId": "CreateGrouter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Grouter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/Grouter/{id}": {
      "get": {
        "tags": [
          "Grouter"
        ],
        "operationId": "GetGrouterById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grouter"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Grouter"
        ],
        "operationId": "UpdateGrouter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Grouter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Grouter"
        ],
        "operationId": "DeleteGrouter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/Gsite": {
      "get": {
        "tags": [
          "Gsite"
        ],
        "operationId": "GetAllGsites",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gsite"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Gsite"
        ],
        "operationId": "CreateGsite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gsite"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/Gsite/{id}": {
      "get": {
        "tags": [
          "Gsite"
        ],
        "operationId": "GetGsiteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gsite"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gsite"
        ],
        "operationId": "UpdateGsite",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gsite"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Gsite"
        ],
        "operationId": "DeleteGsite",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/Gswitch": {
      "get": {
        "tags": [
          "Gswitch"
        ],
        "operationId": "GetAllGswitchs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gswitch"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Gswitch"
        ],
        "operationId": "CreateGswitch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gswitch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/Gswitch/{id}": {
      "get": {
        "tags": [
          "Gswitch"
        ],
        "operationId": "GetGswitchById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gswitch"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gswitch"
        ],
        "operationId": "UpdateGswitch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gswitch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Gswitch"
        ],
        "operationId": "DeleteGswitch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/Gvendor": {
      "get": {
        "tags": [
          "Gvendor"
        ],
        "operationId": "GetAllGvendors",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gvendor"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Gvendor"
        ],
        "operationId": "CreateGvendor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gvendor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/Gvendor/{id}": {
      "get": {
        "tags": [
          "Gvendor"
        ],
        "operationId": "GetGvendorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Gvendor"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gvendor"
        ],
        "operationId": "UpdateGvendor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gvendor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Gvendor"
        ],
        "operationId": "DeleteGvendor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/HUser": {
      "get": {
        "tags": [
          "HUser"
        ],
        "operationId": "GetAllHUsers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HUser"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "HUser"
        ],
        "operationId": "CreateHUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/HUser/{id}": {
      "get": {
        "tags": [
          "HUser"
        ],
        "operationId": "GetHUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HUser"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "HUser"
        ],
        "operationId": "UpdateHUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "HUser"
        ],
        "operationId": "DeleteHUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Gaccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "accountname": {
            "type": "string",
            "nullable": true
          },
          "companyid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wholesalevendorid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Gapp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "appid": {
            "type": "string",
            "nullable": true
          },
          "appdescription": {
            "type": "string",
            "nullable": true
          },
          "apptype": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appregion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dbmstype": {
            "type": "string",
            "nullable": true
          },
          "dbmsvendor": {
            "type": "string",
            "nullable": true
          },
          "dbmstopology": {
            "type": "string",
            "nullable": true
          },
          "gridid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Gchange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "changeid": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "workeffortsize": {
            "type": "string",
            "nullable": true
          },
          "busunit": {
            "type": "string",
            "nullable": true
          },
          "engineerid": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "approvalid": {
            "type": "string",
            "nullable": true
          },
          "changestart": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "changeend": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "holdinfo": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Gcircuittype": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "circuittypeid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Gcustomer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "inventoryid": {
            "type": "string",
            "nullable": true
          },
          "customerid": {
            "type": "string",
            "nullable": true
          },
          "oracleid": {
            "type": "string",
            "nullable": true
          },
          "dynamicsid": {
            "type": "string",
            "nullable": true
          },
          "alohaid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ghost": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "switchid": {
            "type": "string",
            "nullable": true
          },
          "serverid": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "ipaddress": {
            "type": "string",
            "nullable": true
          },
          "telemetryipaddress": {
            "type": "string",
            "nullable": true
          },
          "vpnid1": {
            "type": "string",
            "nullable": true
          },
          "vpnid2": {
            "type": "string",
            "nullable": true
          },
          "lpars": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "imageid": {
            "type": "string",
            "nullable": true
          },
          "inventoryid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ghostimage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "imageid": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageurl": {
            "type": "string",
            "nullable": true
          },
          "imagevendor": {
            "type": "string",
            "nullable": true
          },
          "vendoraccountid": {
            "type": "string",
            "nullable": true
          },
          "operatingsystem": {
            "type": "string",
            "nullable": true
          },
          "inventoryid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ghostvm": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "vmid": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "ipaddress": {
            "type": "string",
            "nullable": true
          },
          "telemetryipaddress": {
            "type": "string",
            "nullable": true
          },
          "vpnid1": {
            "type": "string",
            "nullable": true
          },
          "vpnid2": {
            "type": "string",
            "nullable": true
          },
          "inventoryid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Gitsm": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "ticketid": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "custid": {
            "type": "string",
            "nullable": true
          },
          "oracleid": {
            "type": "string",
            "nullable": true
          },
          "dynamicsid": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "res1": {
            "type": "string",
            "nullable": true
          },
          "res2": {
            "type": "string",
            "nullable": true
          },
          "res3": {
            "type": "string",
            "nullable": true
          },
          "res4": {
            "type": "string",
            "nullable": true
          },
          "ticketstatus": {
            "type": "string",
            "nullable": true
          },
          "opendate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "closedate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Gmanager": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "managerid": {
            "type": "string",
            "nullable": true
          },
          "fullname": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Grouter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "routerid": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "ipaddress": {
            "type": "string",
            "nullable": true
          },
          "telemetryipaddress": {
            "type": "string",
            "nullable": true
          },
          "vpnid1": {
            "type": "string",
            "nullable": true
          },
          "vpnid2": {
            "type": "string",
            "nullable": true
          },
          "inventoryid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Gsite": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "siteid": {
            "type": "string",
            "nullable": true
          },
          "sitedescription": {
            "type": "string",
            "nullable": true
          },
          "siteclli": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "stateregion": {
            "type": "string",
            "nullable": true
          },
          "postal": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "sitecontactid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cllicode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Gswitch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "switchid": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "ipaddress": {
            "type": "string",
            "nullable": true
          },
          "telemetryipaddress": {
            "type": "string",
            "nullable": true
          },
          "vpnid1": {
            "type": "string",
            "nullable": true
          },
          "vpnid2": {
            "type": "string",
            "nullable": true
          },
          "inventoryid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Gvendor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "vendorid": {
            "type": "string",
            "nullable": true
          },
          "vendorname": {
            "type": "string",
            "nullable": true
          },
          "vendoraddress1": {
            "type": "string",
            "nullable": true
          },
          "vendoraddress2": {
            "type": "string",
            "nullable": true
          },
          "vendorcity": {
            "type": "string",
            "nullable": true
          },
          "vendorstate": {
            "type": "string",
            "nullable": true
          },
          "vendorzip": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "block": {
            "type": "integer",
            "format": "int32"
          },
          "sendEmail": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastvisitDate": {
            "type": "string",
            "format": "date-time"
          },
          "activation": {
            "type": "string",
            "nullable": true
          },
          "params": {
            "type": "string",
            "nullable": true
          },
          "lastResetTime": {
            "type": "string",
            "format": "date-time"
          },
          "resetCount": {
            "type": "integer",
            "format": "int64"
          },
          "otpKey": {
            "type": "string",
            "nullable": true
          },
          "otep": {
            "type": "string",
            "nullable": true
          },
          "requireReset": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Void": {
        "type": "object",
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}